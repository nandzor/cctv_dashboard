===========================================
API DOCUMENTATION
===========================================

Aplikasi ini memiliki 2 jenis API authentication:
1. Static Token - untuk testing dan integrasi eksternal
2. Laravel Sanctum - untuk CRUD users (dynamic token)

===========================================
1. STATIC TOKEN API
===========================================

Edit .env dan set token Anda:
API_STATIC_TOKEN=your-secret-static-token-here

Endpoints: /api/static/*

PUBLIC (No Auth):
-----------------
GET /api/static/info
  - Get API information

PROTECTED (Requires Static Token):
-----------------------------------
GET /api/static/validate
  - Validate token

GET /api/static/test
  - Test endpoint utama

GET /api/static/test/ping
  - Quick ping test

POST /api/static/test/echo
  - Echo request data
  Body: (any JSON)

GET /api/static/test/{id}
  - Get test data by ID

POST /api/static/test
  - Create test data
  Body: {
    "name": "Test Name",
    "description": "Optional description"
  }

===========================================
2. SANCTUM API (CRUD USERS)
===========================================

Endpoints: /api/*

PUBLIC:
-------
POST /api/register
  Body: {
    "name": "User Name",
    "email": "user@example.com",
    "password": "password"
  }
  Response: { token: "xxx" }

POST /api/login
  Body: {
    "email": "admin@example.com",
    "password": "password"
  }
  Response: { token: "xxx" }

PROTECTED (Requires Sanctum Token):
------------------------------------
GET /api/me
  - Get authenticated user

POST /api/logout
  - Logout and revoke token

GET /api/users
  - List all users

POST /api/users
  - Create new user
  Body: {
    "name": "User Name",
    "email": "user@example.com",
    "password": "password",
    "password_confirmation": "password",
    "role": "user"
  }

GET /api/users/{id}
  - Get user detail

PUT /api/users/{id}
  - Update user
  Body: {
    "name": "Updated Name",
    "email": "updated@example.com",
    "password": "newpassword",
    "password_confirmation": "newpassword",
    "role": "admin"
  }

DELETE /api/users/{id}
  - Delete user

===========================================
CURL EXAMPLES
===========================================

A. STATIC TOKEN API
-------------------

# Get API Info (no auth)
curl http://localhost:8000/api/static/info

# Validate Static Token
curl -H "Authorization: Bearer your-secret-static-token-here" \
     http://localhost:8000/api/static/validate

# Test Endpoint
curl -H "Authorization: Bearer your-secret-static-token-here" \
     http://localhost:8000/api/static/test

# Ping Test
curl -H "Authorization: Bearer your-secret-static-token-here" \
     http://localhost:8000/api/static/test/ping

# Echo Test
curl -X POST \
     -H "Authorization: Bearer your-secret-static-token-here" \
     -H "Content-Type: application/json" \
     -d '{"message":"hello","data":123}' \
     http://localhost:8000/api/static/test/echo

# Get Test Data
curl -H "Authorization: Bearer your-secret-static-token-here" \
     http://localhost:8000/api/static/test/1

# Create Test Data
curl -X POST \
     -H "Authorization: Bearer your-secret-static-token-here" \
     -H "Content-Type: application/json" \
     -d '{"name":"Test Item","description":"This is a test"}' \
     http://localhost:8000/api/static/test

B. SANCTUM API (Users)
----------------------

# Register & Get Token
curl -X POST \
     -H "Content-Type: application/json" \
     -d '{"name":"New User","email":"newuser@example.com","password":"password"}' \
     http://localhost:8000/api/register

# Login & Get Token
curl -X POST \
     -H "Content-Type: application/json" \
     -d '{"email":"admin@example.com","password":"password"}' \
     http://localhost:8000/api/login

# List Users (use token from login)
curl -H "Authorization: Bearer 1|xxxxx" \
     http://localhost:8000/api/users

# Create User
curl -X POST \
     -H "Authorization: Bearer 1|xxxxx" \
     -H "Content-Type: application/json" \
     -d '{"name":"New User","email":"new@example.com","password":"password","password_confirmation":"password","role":"user"}' \
     http://localhost:8000/api/users

# Get User
curl -H "Authorization: Bearer 1|xxxxx" \
     http://localhost:8000/api/users/1

# Update User
curl -X PUT \
     -H "Authorization: Bearer 1|xxxxx" \
     -H "Content-Type: application/json" \
     -d '{"name":"Updated Name","email":"updated@example.com","role":"admin"}' \
     http://localhost:8000/api/users/1

# Delete User
curl -X DELETE \
     -H "Authorization: Bearer 1|xxxxx" \
     http://localhost:8000/api/users/2

# Get Current User
curl -H "Authorization: Bearer 1|xxxxx" \
     http://localhost:8000/api/me

# Logout
curl -X POST \
     -H "Authorization: Bearer 1|xxxxx" \
     http://localhost:8000/api/logout

===========================================
POSTMAN / INSOMNIA SETUP
===========================================

1. Headers:
   Authorization: Bearer your-secret-static-token-here
   Content-Type: application/json

2. Base URL:
   http://localhost:8000/api/static

===========================================
ERROR RESPONSES
===========================================

401 Unauthorized:
{
  "success": false,
  "message": "Unauthorized - Invalid static token"
}

422 Validation Error:
{
  "success": false,
  "errors": {
    "email": ["The email field is required."]
  }
}

404 Not Found:
{
  "success": false,
  "message": "User not found"
}

